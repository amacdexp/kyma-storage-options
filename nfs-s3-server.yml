
apiVersion: v1
kind: ReplicationController
##apiVersion: apps/v1
##kind: ReplicaSet
metadata:
  name: nfs-s3-server
  #namespace: dev
  ##labels:
  ##  app: nfs
  ##  tier: nfs-server
spec:
  replicas: 1
  selector:
    role: nfs-s3-server
    ##matchLabels:
    ##  tier: nfs-server
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        role: nfs-s3-server
      #labels:
      #  tier: nfs-server
    spec:
      containers:
      - name: nfs-s3-server
        #image: k8s.gcr.io/volume-nfs:0.8
        #image: alphayax/docker-volume-nfs:latest
        image: amacdexp/nfs-server-s3-support:latest
        imagePullPolicy: Always
        env:
        - name: S3_REGION
          value: "eu-central-1"
        - name: S3_BUCKET
          value: "kymastore"
        - name: AWS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-s3
              key: AWS_KEY
        - name: AWS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aws-s3
              key: AWS_SECRET_KEY
        ports:
        - name: nfs
          containerPort: 2049
        - name: mountd
          containerPort: 20048
        - name: rpcbind
          containerPort: 111
        securityContext:
          privileged: true
        #volumeMounts:
        #- name: default-nfs-volume
        #  #mountPath: /exports
        #  mountPath: /nfs-shared/default
        #- name: nfs-server-conf
        #  mountPath: /etc/exports.d/
      volumes:
      #- name: default-nfs-volume
      #  persistentVolumeClaim:
      #      claimName: default-nfs-pvc
      #- name: nfs-server-conf
      #  configMap:
      #    name: nfs-server-conf
---
kind: Service
apiVersion: v1
metadata:
  name: nfs-s3-server
spec:
  type: LoadBalancer
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    role: nfs-s3-server